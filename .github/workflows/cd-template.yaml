name: CD Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Set up actions
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Run CodeBuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: UsersBuildProject

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Set up actions
        uses: actions/checkout@v4

      - name: Set up SDK
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download packages
        run: go mod download

      - name: Deploy DB stack
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_DB_STACK_NAME: ${{ vars.AWS_DB_STACK_NAME }}
        run: |
          sam build -t cfn/db.cfn.yaml
          sam deploy \
            --stack-name $AWS_DB_STACK_NAME \
            --resolve-s3 \
            --s3-prefix $AWS_DB_STACK_NAME \
            --region $AWS_REGION \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset

      - name: Deploy config stack
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_CONFIG_STACK_NAME: ${{ vars.AWS_CONFIG_STACK_NAME }}
          AWS_CONFIG_FUNCTION_NAME: ${{ vars.AWS_CONFIG_FUNCTION_NAME }}
        run: |
          sam build -t cfn/service.cfn.yaml
          sam deploy \
            --stack-name $AWS_CONFIG_STACK_NAME \
            --resolve-s3 \
            --s3-prefix $AWS_CONFIG_STACK_NAME \
            --region $AWS_REGION \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides FunctionName=$AWS_CONFIG_FUNCTION_NAME OnlyConfig=1 \
            --no-fail-on-empty-changeset

      - name: Invoke config
        env:
          AWS_CONFIG_FUNCTION_NAME: ${{ vars.AWS_CONFIG_FUNCTION_NAME }}
        run: |
          response=$(sam remote invoke $AWS_CONFIG_FUNCTION_NAME --output text)
          if [[ "$response" == *'"statusCode":500'* ]]; then
            echo "Config invocation failed: $response"
            exit 1
          else
            echo "Config invocation succeeded: $response"
          fi

      - name: Build docs
        run: make docs

      # - name: Run migrations
      #   run: |
      #     aws codebuild start-build \
      #       --project-name your-codebuild-project-name \
      #       --region ${{ vars.AWS_REGION }}

      - name: Deploy service stack
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_SERVICE_STACK_NAME: ${{ vars.AWS_SERVICE_STACK_NAME }}
        run: |
          sam build -t cfn/service.cfn.yaml
          sam deploy \
            --stack-name $AWS_SERVICE_STACK_NAME \
            --resolve-s3 \
            --s3-prefix $AWS_SERVICE_STACK_NAME \
            --region $AWS_REGION \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset

# Environment: secrets, region, stack name, config function name (overrided during deploy)
#
# sam build function
# sam deploy test-stack
# sam remote invoke TestFunction - fail if error
# docs
# migrate with codebuild project
# sam build service
# sam deploy service
